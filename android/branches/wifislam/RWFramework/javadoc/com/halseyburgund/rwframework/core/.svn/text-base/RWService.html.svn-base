<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_29) on Thu Jan 12 11:12:44 CET 2012 -->
<TITLE>
RWService
</TITLE>

<META NAME="date" CONTENT="2012-01-12">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RWService";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/RWService.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWRecordingTask.StateListener.html" title="interface in com.halseyburgund.rwframework.core"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWService.RWServiceBinder.html" title="class in com.halseyburgund.rwframework.core"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/halseyburgund/rwframework/core/RWService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RWService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.halseyburgund.rwframework.core</FONT>
<BR>
Class RWService</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">Service
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.halseyburgund.rwframework.core.RWService</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.util.Observer</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>RWService</B><DT>extends Service<DT>implements java.util.Observer</DL>
</PRE>

<P>
Service for background playback of Roundware sound stream and handle the
 various server calls. Calls can either be queued that is checked at a
 regular interval, or sent directly. 
 
 Notes:
 High level Roundware server communication related methods are all
 prefixed with 'rw' (rwRequestStream, rwModifyStream, rwSubmit, etc.).
 
 High level methods for controlling sound playback all are prefix with
 'playback' (playbackStart, playbackStop, playbackFadeIn, etc.).
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Rob Knapen</DD>
</DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.RWServiceBinder.html" title="class in com.halseyburgund.rwframework.core">RWService.RWServiceBinder</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Service binder used to communicate with the Roundware service.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;class</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.SessionState.html" title="enum in com.halseyburgund.rwframework.core">RWService.SessionState</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connection states of the Roundware session.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#RWService()">RWService</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;IntentFilter</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#addOperationsToIntentFilter(IntentFilter, java.lang.String...)">addOperationsToIntentFilter</A></B>(IntentFilter&nbsp;filter,
                            java.lang.String...&nbsp;operationNames)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds to the specified IntentFilter the actions for the SUCCESS,
 FAILURE, and QUEUED intent broadcasts for the server calls with the
 given operationNames.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#broadcastSharingMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.Double, java.lang.Double, java.lang.Double)">broadcastSharingMessage</A></B>(java.lang.String&nbsp;message,
                        java.lang.String&nbsp;url,
                        java.lang.String&nbsp;envelopeId,
                        java.lang.Double&nbsp;latitude,
                        java.lang.Double&nbsp;longitude,
                        java.lang.Double&nbsp;accuracy)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Broadcast an intent for a sharing message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;IntentFilter</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#createOperationsIntentFilter()">createOperationsIntentFilter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an IntentFilter for the SUCCESS, FAILURE and QUEUED broadcast
 intents for all the current server calls.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#deleteQueue()">deleteQueue</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attempts to remove the persisted queue of pending server calls.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWActionFactory.html" title="class in com.halseyburgund.rwframework.core">RWActionFactory</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getActionFactory()">getActionFactory</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Access the factory that can be used to create RWAction instances
 that are usable with this RWService instance and the project it is
 configured for.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWConfiguration.html" title="class in com.halseyburgund.rwframework.core">RWConfiguration</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getConfiguration()">getConfiguration</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Access the configuration information of this RWService instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;Location</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getLastKnownLocation()">getLastKnownLocation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieves the last known location by the location services of the
 device.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getQueueSize()">getQueueSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of items currently in the queue awaiting
 processing.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getServerUrl()">getServerUrl</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the currently used URL to access the Roundware server.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getShowDetailedMessages()">getShowDetailedMessages</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the RWService is displaying more detailed messages,
 e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getStreamUrl()">getStreamUrl</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the URL of the current audio stream (if any).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWTags.html" title="class in com.halseyburgund.rwframework.core">RWTags</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getTags()">getTags</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Access the tags information of this RWService instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#getVolumeLevel()">getVolumeLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the current volume level of the music player.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isConnected()">isConnected</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if data connectivity is available, honoring the flag 
 mOnlyConnectOverWifi to accept only WiFi and not mobile data
 connections.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isGpsEnabled()">isGpsEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if the device's GPS is available and switched on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isNetworkLocationEnabled()">isNetworkLocationEnabled</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if the device's Network based location service is
 available and may be used.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isPlaying()">isPlaying</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the music player is currently playing the audio stream
 and is not muted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isPlayingMuted()">isPlayingMuted</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the music player is currently playing the audio stream,
 but the sound is muted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#isPlayingStaticSoundtrack()">isPlayingStaticSoundtrack</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks if the current session id indicates that the media player is
 playing the static soundtrack from the server.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#manageSessionState(com.halseyburgund.rwframework.core.RWService.SessionState)">manageSessionState</A></B>(<A HREF="../../../../com/halseyburgund/rwframework/core/RWService.SessionState.html" title="enum in com.halseyburgund.rwframework.core">RWService.SessionState</A>&nbsp;newState)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Manage changing of the current session state to the indicated new
 state.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;IBinder</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#onBind(Intent)">onBind</A></B>(Intent&nbsp;intent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#onCreate()">onCreate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#onDestroy()">onDestroy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#onStartCommand(Intent, int, int)">onStartCommand</A></B>(Intent&nbsp;intent,
               int&nbsp;flags,
               int&nbsp;startId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#playbackFadeIn(int)">playbackFadeIn</A></B>(int&nbsp;endVolumeLevel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fade in the volume of the music player, until it reaches the level
 specified.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#playbackFadeOut()">playbackFadeOut</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fade out the volume of the music player, until it reaches 0.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#playbackStart()">playbackStart</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When not already playing, create a music player and start its
 initialization in the background.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#playbackStop()">playbackStop</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stops music playback and releases the music player used, allowing the
 device to free up the memory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#releaseMockLocation()">releaseMockLocation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;When a mock location has been set for the device, release it and return
 to the normal location updates (e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwModifyStream(com.halseyburgund.rwframework.util.RWList, boolean)">rwModifyStream</A></B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
               boolean&nbsp;now)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a call to the Roundware server to request modifying of the
 already streaming audio stream based on the specified selections
 of tags options.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwRequestStream(com.halseyburgund.rwframework.util.RWList, boolean)">rwRequestStream</A></B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
                boolean&nbsp;now)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a call to the Roundware server to request an audio stream
 based on the specified selections of tags options.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwSendHeartbeat()">rwSendHeartbeat</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a heartbeat call to the Roundware server, to let it know we
 are still active.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwSendLogEvent(int, com.halseyburgund.rwframework.util.RWList, java.lang.String, boolean)">rwSendLogEvent</A></B>(int&nbsp;eventTypeResId,
               <A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
               java.lang.String&nbsp;data,
               boolean&nbsp;now)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a call to the Roundware server to notify it of a specific
 event (user started listening, user started a recording, etc.).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwSendMoveListener(boolean)">rwSendMoveListener</A></B>(boolean&nbsp;now)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a call to the Roundware server with information about the
 current location (latitude, longitude) of the device.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#rwSubmit(com.halseyburgund.rwframework.util.RWList, java.lang.String, boolean)">rwSubmit</A></B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
         java.lang.String&nbsp;filename,
         boolean&nbsp;now)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends calls to the Roundware server needed to announce and upload
 the specified file, marked by the given selections of tags options.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#setMockLocation(java.lang.String, java.lang.String)">setMockLocation</A></B>(java.lang.String&nbsp;latitude,
                java.lang.String&nbsp;longitude)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fixes the location of the device at the specified coordinates.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#setNotificationText(java.lang.String)">setNotificationText</A></B>(java.lang.String&nbsp;message)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Updates the text in the RWService notification placed in the Android
 notification bar on the screen of the device.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#setOnlyConnectOverWifi(boolean)">setOnlyConnectOverWifi</A></B>(boolean&nbsp;state)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies if the RWService should only use WiFi connection, and not
 mobile data connections for communicating with the server.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#setShowDetailedMessages(boolean)">setShowDetailedMessages</A></B>(boolean&nbsp;state)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specifies if the RWService should display more detailed messages,
 e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#setVolumeLevel(int, boolean)">setVolumeLevel</A></B>(int&nbsp;newVolumeLevel,
               boolean&nbsp;fade)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets a new volume level for the music player.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#stopService()">stopService</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shut down the RWService instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/halseyburgund/rwframework/core/RWService.html#update(java.util.Observable, java.lang.Object)">update</A></B>(java.util.Observable&nbsp;observable,
       java.lang.Object&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Receives and handles location updates from RWLocationTracker.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="RWService()"><!-- --></A><H3>
RWService</H3>
<PRE>
public <B>RWService</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="addOperationsToIntentFilter(IntentFilter, java.lang.String...)"><!-- --></A><H3>
addOperationsToIntentFilter</H3>
<PRE>
public static IntentFilter <B>addOperationsToIntentFilter</B>(IntentFilter&nbsp;filter,
                                                       java.lang.String...&nbsp;operationNames)</PRE>
<DL>
<DD>Adds to the specified IntentFilter the actions for the SUCCESS,
 FAILURE, and QUEUED intent broadcasts for the server calls with the
 given operationNames.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filter</CODE> - IntentFilter to add actions to<DD><CODE>operationNames</CODE> - to create action filters for
<DT><B>Returns:</B><DD>updated IntentFilter</DL>
</DD>
</DL>
<HR>

<A NAME="createOperationsIntentFilter()"><!-- --></A><H3>
createOperationsIntentFilter</H3>
<PRE>
public IntentFilter <B>createOperationsIntentFilter</B>()</PRE>
<DL>
<DD>Creates an IntentFilter for the SUCCESS, FAILURE and QUEUED broadcast
 intents for all the current server calls.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>IntentFilter to receive low level server call broadcasts</DL>
</DD>
</DL>
<HR>

<A NAME="onCreate()"><!-- --></A><H3>
onCreate</H3>
<PRE>
public void <B>onCreate</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isGpsEnabled()"><!-- --></A><H3>
isGpsEnabled</H3>
<PRE>
public boolean <B>isGpsEnabled</B>()</PRE>
<DL>
<DD>Checks if the device's GPS is available and switched on.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true when GPS is enabled</DL>
</DD>
</DL>
<HR>

<A NAME="isNetworkLocationEnabled()"><!-- --></A><H3>
isNetworkLocationEnabled</H3>
<PRE>
public boolean <B>isNetworkLocationEnabled</B>()</PRE>
<DL>
<DD>Checks if the device's Network based location service is
 available and may be used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true when Network location service is enabled</DL>
</DD>
</DL>
<HR>

<A NAME="getLastKnownLocation()"><!-- --></A><H3>
getLastKnownLocation</H3>
<PRE>
public Location <B>getLastKnownLocation</B>()</PRE>
<DL>
<DD>Retrieves the last known location by the location services of the
 device. This does not force updating and might be out of date.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Location, last known by the location services</DL>
</DD>
</DL>
<HR>

<A NAME="onBind(Intent)"><!-- --></A><H3>
onBind</H3>
<PRE>
public IBinder <B>onBind</B>(Intent&nbsp;intent)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onStartCommand(Intent, int, int)"><!-- --></A><H3>
onStartCommand</H3>
<PRE>
public int <B>onStartCommand</B>(Intent&nbsp;intent,
                          int&nbsp;flags,
                          int&nbsp;startId)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="playbackStart()"><!-- --></A><H3>
playbackStart</H3>
<PRE>
public void <B>playbackStart</B>()</PRE>
<DL>
<DD>When not already playing, create a music player and start its
 initialization in the background. Use a broadcast receiver to
 be notified of completion or errors.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="playbackStop()"><!-- --></A><H3>
playbackStop</H3>
<PRE>
public void <B>playbackStop</B>()</PRE>
<DL>
<DD>Stops music playback and releases the music player used, allowing the
 device to free up the memory. Call this method when no longer interested
 in listening to the audio stream.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onDestroy()"><!-- --></A><H3>
onDestroy</H3>
<PRE>
public void <B>onDestroy</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stopService()"><!-- --></A><H3>
stopService</H3>
<PRE>
public void <B>stopService</B>()</PRE>
<DL>
<DD>Shut down the RWService instance. Makes sure the location updates
 are stopped, the background processing of the action queue is stopped,
 the music player is stopped and released, and finally the service
 itself is terminated.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="update(java.util.Observable, java.lang.Object)"><!-- --></A><H3>
update</H3>
<PRE>
public void <B>update</B>(java.util.Observable&nbsp;observable,
                   java.lang.Object&nbsp;data)</PRE>
<DL>
<DD>Receives and handles location updates from RWLocationTracker.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>update</CODE> in interface <CODE>java.util.Observer</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setNotificationText(java.lang.String)"><!-- --></A><H3>
setNotificationText</H3>
<PRE>
public void <B>setNotificationText</B>(java.lang.String&nbsp;message)</PRE>
<DL>
<DD>Updates the text in the RWService notification placed in the Android
 notification bar on the screen of the device.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - to be displayed</DL>
</DD>
</DL>
<HR>

<A NAME="getActionFactory()"><!-- --></A><H3>
getActionFactory</H3>
<PRE>
public <A HREF="../../../../com/halseyburgund/rwframework/core/RWActionFactory.html" title="class in com.halseyburgund.rwframework.core">RWActionFactory</A> <B>getActionFactory</B>()</PRE>
<DL>
<DD>Access the factory that can be used to create RWAction instances
 that are usable with this RWService instance and the project it is
 configured for.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>RWActionFactory for creating RWAction instances</DL>
</DD>
</DL>
<HR>

<A NAME="getConfiguration()"><!-- --></A><H3>
getConfiguration</H3>
<PRE>
public <A HREF="../../../../com/halseyburgund/rwframework/core/RWConfiguration.html" title="class in com.halseyburgund.rwframework.core">RWConfiguration</A> <B>getConfiguration</B>()</PRE>
<DL>
<DD>Access the configuration information of this RWService instance.
 When it is started and initialized the first thing the RWService
 does is to read the configuration info for a project from the
 Roundware server. Various project specific settings are then made
 available through this RWConfiguration instance.
 
 Note: Use a broadcast receiver for the RW_SESSION_INITIALISED
 intent to be notified when the configuration has been fully
 received from the server.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>RWConfiguration with Roundware project settings</DL>
</DD>
</DL>
<HR>

<A NAME="getTags()"><!-- --></A><H3>
getTags</H3>
<PRE>
public <A HREF="../../../../com/halseyburgund/rwframework/core/RWTags.html" title="class in com.halseyburgund.rwframework.core">RWTags</A> <B>getTags</B>()</PRE>
<DL>
<DD>Access the tags information of this RWService instance. After
 initializing and retrieving the project configuration from the
 server, the RWService also retrieves the tags for the project.
 Tags can be used to mark recordings, specify selections, etc.
 
 Note: Use a broadcast receiver for the RW_TAGS_LOADED intent
 to be notified when the tags have been fully received from the
 server.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>RWTags with the Roundware project tags</DL>
</DD>
</DL>
<HR>

<A NAME="getServerUrl()"><!-- --></A><H3>
getServerUrl</H3>
<PRE>
public java.lang.String <B>getServerUrl</B>()</PRE>
<DL>
<DD>Returns the currently used URL to access the Roundware server.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>URL for Roundware server</DL>
</DD>
</DL>
<HR>

<A NAME="getStreamUrl()"><!-- --></A><H3>
getStreamUrl</H3>
<PRE>
public java.lang.String <B>getStreamUrl</B>()</PRE>
<DL>
<DD>Returns the URL of the current audio stream (if any).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>URL of current audio stream</DL>
</DD>
</DL>
<HR>

<A NAME="isPlayingStaticSoundtrack()"><!-- --></A><H3>
isPlayingStaticSoundtrack</H3>
<PRE>
public boolean <B>isPlayingStaticSoundtrack</B>()</PRE>
<DL>
<DD>Checks if the current session id indicates that the media player is
 playing the static soundtrack from the server. This stream is e.g.
 returned when the user starts the app outside the geographical range of
 the project.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true when the media player is playing the static soundtrack</DL>
</DD>
</DL>
<HR>

<A NAME="isPlaying()"><!-- --></A><H3>
isPlaying</H3>
<PRE>
public boolean <B>isPlaying</B>()</PRE>
<DL>
<DD>Returns true if the music player is currently playing the audio stream
 and is not muted.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the player is playing and not muted</DL>
</DD>
</DL>
<HR>

<A NAME="isPlayingMuted()"><!-- --></A><H3>
isPlayingMuted</H3>
<PRE>
public boolean <B>isPlayingMuted</B>()</PRE>
<DL>
<DD>Returns true if the music player is currently playing the audio stream,
 but the sound is muted.
 
 Note: although resource inefficient muting the player to simulated a
 paused state is currently easier than stopping the stream and later
 trying to regain it with some kind of buffering in between. In the
 future more advanced solutions might be implemented.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if the player is playing and the volume is muted</DL>
</DD>
</DL>
<HR>

<A NAME="getShowDetailedMessages()"><!-- --></A><H3>
getShowDetailedMessages</H3>
<PRE>
public boolean <B>getShowDetailedMessages</B>()</PRE>
<DL>
<DD>Returns true if the RWService is displaying more detailed messages,
 e.g. in its notifications. This is mostly for debugging purposes or
 for advanced users.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if detailed messages are being displayed</DL>
</DD>
</DL>
<HR>

<A NAME="setShowDetailedMessages(boolean)"><!-- --></A><H3>
setShowDetailedMessages</H3>
<PRE>
public void <B>setShowDetailedMessages</B>(boolean&nbsp;state)</PRE>
<DL>
<DD>Specifies if the RWService should display more detailed messages,
 e.g. in its notifications. This is mostly for debugging purposes or
 for advanced users.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>state</CODE> - set to true for detailed messages</DL>
</DD>
</DL>
<HR>

<A NAME="setOnlyConnectOverWifi(boolean)"><!-- --></A><H3>
setOnlyConnectOverWifi</H3>
<PRE>
public void <B>setOnlyConnectOverWifi</B>(boolean&nbsp;state)</PRE>
<DL>
<DD>Specifies if the RWService should only use WiFi connection, and not
 mobile data connections for communicating with the server.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>state</CODE> - set to true to only allow WiFi connection</DL>
</DD>
</DL>
<HR>

<A NAME="isConnected()"><!-- --></A><H3>
isConnected</H3>
<PRE>
public boolean <B>isConnected</B>()</PRE>
<DL>
<DD>Checks if data connectivity is available, honoring the flag 
 mOnlyConnectOverWifi to accept only WiFi and not mobile data
 connections.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true if data connectivity is available</DL>
</DD>
</DL>
<HR>

<A NAME="setMockLocation(java.lang.String, java.lang.String)"><!-- --></A><H3>
setMockLocation</H3>
<PRE>
public void <B>setMockLocation</B>(java.lang.String&nbsp;latitude,
                            java.lang.String&nbsp;longitude)</PRE>
<DL>
<DD>Fixes the location of the device at the specified coordinates. Updates
 from the GPS or other internal location providers will no longer have
 effect, until releaseMockLocation is called.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="releaseMockLocation()"><!-- --></A><H3>
releaseMockLocation</H3>
<PRE>
public void <B>releaseMockLocation</B>()</PRE>
<DL>
<DD>When a mock location has been set for the device, release it and return
 to the normal location updates (e.g. GPS, Network).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="deleteQueue()"><!-- --></A><H3>
deleteQueue</H3>
<PRE>
public boolean <B>deleteQueue</B>()</PRE>
<DL>
<DD>Attempts to remove the persisted queue of pending server calls.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>true when successful</DL>
</DD>
</DL>
<HR>

<A NAME="getQueueSize()"><!-- --></A><H3>
getQueueSize</H3>
<PRE>
public int <B>getQueueSize</B>()</PRE>
<DL>
<DD>Returns the number of items currently in the queue awaiting
 processing.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>queue size</DL>
</DD>
</DL>
<HR>

<A NAME="rwSendMoveListener(boolean)"><!-- --></A><H3>
rwSendMoveListener</H3>
<PRE>
public java.lang.String <B>rwSendMoveListener</B>(boolean&nbsp;now)</PRE>
<DL>
<DD>Sends a call to the Roundware server with information about the
 current location (latitude, longitude) of the device.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>now</CODE> - True to sent immediately, false for queued processing
<DT><B>Returns:</B><DD>server response, empty string when queued</DL>
</DD>
</DL>
<HR>

<A NAME="rwSendHeartbeat()"><!-- --></A><H3>
rwSendHeartbeat</H3>
<PRE>
public java.lang.String <B>rwSendHeartbeat</B>()</PRE>
<DL>
<DD>Sends a heartbeat call to the Roundware server, to let it know we
 are still active. Can be used when no other server calls have been
 made for a while to prevent the server from closing our session and
 starting cleaning it up.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>server response</DL>
</DD>
</DL>
<HR>

<A NAME="rwSendLogEvent(int, com.halseyburgund.rwframework.util.RWList, java.lang.String, boolean)"><!-- --></A><H3>
rwSendLogEvent</H3>
<PRE>
public java.lang.String <B>rwSendLogEvent</B>(int&nbsp;eventTypeResId,
                                       <A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
                                       java.lang.String&nbsp;data,
                                       boolean&nbsp;now)</PRE>
<DL>
<DD>Sends a call to the Roundware server to notify it of a specific
 event (user started listening, user started a recording, etc.).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>eventTypeResId</CODE> - of type of log event<DD><CODE>tags</CODE> - to include in log event, may be null<DD><CODE>data</CODE> - to include in log event, may be null<DD><CODE>now</CODE> - True to sent immediately, false for queued processing
<DT><B>Returns:</B><DD>server response, empty string when queued</DL>
</DD>
</DL>
<HR>

<A NAME="rwRequestStream(com.halseyburgund.rwframework.util.RWList, boolean)"><!-- --></A><H3>
rwRequestStream</H3>
<PRE>
public java.lang.String <B>rwRequestStream</B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
                                        boolean&nbsp;now)</PRE>
<DL>
<DD>Sends a call to the Roundware server to request an audio stream
 based on the specified selections of tags options.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tags</CODE> - of tags options for the audio<DD><CODE>now</CODE> - True to sent immediately, false for queued processing
<DT><B>Returns:</B><DD>server response, empty string when queued</DL>
</DD>
</DL>
<HR>

<A NAME="rwModifyStream(com.halseyburgund.rwframework.util.RWList, boolean)"><!-- --></A><H3>
rwModifyStream</H3>
<PRE>
public java.lang.String <B>rwModifyStream</B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
                                       boolean&nbsp;now)</PRE>
<DL>
<DD>Sends a call to the Roundware server to request modifying of the
 already streaming audio stream based on the specified selections
 of tags options.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tags</CODE> - of tags options for the audio<DD><CODE>now</CODE> - True to sent immediately, false for queued processing
<DT><B>Returns:</B><DD>server response, empty string when queued</DL>
</DD>
</DL>
<HR>

<A NAME="rwSubmit(com.halseyburgund.rwframework.util.RWList, java.lang.String, boolean)"><!-- --></A><H3>
rwSubmit</H3>
<PRE>
public java.lang.String <B>rwSubmit</B>(<A HREF="../../../../com/halseyburgund/rwframework/util/RWList.html" title="class in com.halseyburgund.rwframework.util">RWList</A>&nbsp;tags,
                                 java.lang.String&nbsp;filename,
                                 boolean&nbsp;now)
                          throws java.lang.Exception</PRE>
<DL>
<DD>Sends calls to the Roundware server needed to announce and upload
 the specified file, marked by the given selections of tags options.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tags</CODE> - of tags options for the audio<DD><CODE>filename</CODE> - of file to be uploaded to the server<DD><CODE>now</CODE> - True to sent immediately, false for queued processing
<DT><B>Returns:</B><DD>server response, empty string when queued
<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE> - when temporary file could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="broadcastSharingMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.Double, java.lang.Double, java.lang.Double)"><!-- --></A><H3>
broadcastSharingMessage</H3>
<PRE>
public void <B>broadcastSharingMessage</B>(java.lang.String&nbsp;message,
                                    java.lang.String&nbsp;url,
                                    java.lang.String&nbsp;envelopeId,
                                    java.lang.Double&nbsp;latitude,
                                    java.lang.Double&nbsp;longitude,
                                    java.lang.Double&nbsp;accuracy)</PRE>
<DL>
<DD>Broadcast an intent for a sharing message. ALl relevant info is based
 as extras in the intent.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>message</CODE> - to be included in the intent<DD><CODE>url</CODE> - to be included in the intent<DD><CODE>envelopeId</CODE> - to be included in the intent<DD><CODE>latitude</CODE> - (decimal degrees) to be included in the intent<DD><CODE>longitude</CODE> - (decimal degrees) to be included in the intent<DD><CODE>accuracy</CODE> - (in meters) of location to be included in the intent</DL>
</DD>
</DL>
<HR>

<A NAME="manageSessionState(com.halseyburgund.rwframework.core.RWService.SessionState)"><!-- --></A><H3>
manageSessionState</H3>
<PRE>
public void <B>manageSessionState</B>(<A HREF="../../../../com/halseyburgund/rwframework/core/RWService.SessionState.html" title="enum in com.halseyburgund.rwframework.core">RWService.SessionState</A>&nbsp;newState)</PRE>
<DL>
<DD>Manage changing of the current session state to the indicated new
 state. Intents will be broadcasted to notify receivers of the state
 changes.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>newState</CODE> - session state to switch to</DL>
</DD>
</DL>
<HR>

<A NAME="playbackFadeOut()"><!-- --></A><H3>
playbackFadeOut</H3>
<PRE>
public void <B>playbackFadeOut</B>()</PRE>
<DL>
<DD>Fade out the volume of the music player, until it reaches 0.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="playbackFadeIn(int)"><!-- --></A><H3>
playbackFadeIn</H3>
<PRE>
public void <B>playbackFadeIn</B>(int&nbsp;endVolumeLevel)</PRE>
<DL>
<DD>Fade in the volume of the music player, until it reaches the level
 specified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>endVolumeLevel</CODE> - (0 - 100)</DL>
</DD>
</DL>
<HR>

<A NAME="getVolumeLevel()"><!-- --></A><H3>
getVolumeLevel</H3>
<PRE>
public int <B>getVolumeLevel</B>()</PRE>
<DL>
<DD>Returns the current volume level of the music player.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>volume level (0 - 100)</DL>
</DD>
</DL>
<HR>

<A NAME="setVolumeLevel(int, boolean)"><!-- --></A><H3>
setVolumeLevel</H3>
<PRE>
public void <B>setVolumeLevel</B>(int&nbsp;newVolumeLevel,
                           boolean&nbsp;fade)</PRE>
<DL>
<DD>Sets a new volume level for the music player. The change in volume
 level can be made abruptly or through fading.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>newVolumeLevel</CODE> - for the music player<DD><CODE>fade</CODE> - change level by fading or not</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/RWService.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWRecordingTask.StateListener.html" title="interface in com.halseyburgund.rwframework.core"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/halseyburgund/rwframework/core/RWService.RWServiceBinder.html" title="class in com.halseyburgund.rwframework.core"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/halseyburgund/rwframework/core/RWService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RWService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
